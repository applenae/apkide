buildscript {
	repositories {
		google()
		mavenCentral()
		gradlePluginPortal()
		maven { url 'https://repo1.maven.org/maven2/' }
		maven { url 'https://oss.sonatype.org/content/repositories/releases/' }
		maven { url 'https://jcenter.bintray.com/' }
		maven { url 'https://repository.jboss.org/nexus/content/repositories/releases/' }
		maven { url 'https://plugins.gradle.org/m2/' }
		maven { url 'https://maven.quiltmc.org/repository/release/' }
		maven { url 'https://repository.liferay.com/nexus/content/repositories/public/' }
		maven { url 'https://maven.aliyun.com/nexus/content/repositories/google' }
		maven { url 'https://maven.aliyun.com/nexus/content/groups/public' }
		maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
		maven { url 'https://jitpack.io' }
		maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
		maven { url 'https://oss.sonatype.org/service/local/repositories/releases/content/' }
	}
	dependencies {
		classpath libs.gradle
	}
}

allprojects {
	repositories {
		google()
		mavenCentral()
		gradlePluginPortal()
		maven { url 'https://repo1.maven.org/maven2/' }
		maven { url 'https://oss.sonatype.org/content/repositories/releases/' }
		maven { url 'https://jcenter.bintray.com/' }
		maven { url 'https://repository.jboss.org/nexus/content/repositories/releases/' }
		maven { url 'https://plugins.gradle.org/m2/' }
		maven { url 'https://maven.quiltmc.org/repository/release/' }
		maven { url 'https://repository.liferay.com/nexus/content/repositories/public/' }
		maven { url 'https://maven.aliyun.com/nexus/content/repositories/google' }
		maven { url 'https://maven.aliyun.com/nexus/content/groups/public' }
		maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
		maven { url 'https://jitpack.io' }
		maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
		maven { url 'https://oss.sonatype.org/service/local/repositories/releases/content/' }
	}

	gradle.projectsEvaluated {
		tasks.withType(JavaCompile).tap {
			configureEach {
				//options.compilerArgs << '-Xdoclint:none'
				options.compilerArgs << '-Xlint:-deprecation'
			}
		}
	}
}

tasks.register('clean', Delete) {
	delete rootProject.buildDir
}
